<UserControl x:Class="ZWaveControllerUI.Views.TransmitSettingsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:bind="clr-namespace:ZWaveControllerUI.Bind"
             xmlns:controls="clr-namespace:ZWaveControllerUI.Controls"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:enm="clr-namespace:ZWave.BasicApplication.Enums;assembly=ZWaveBasicApplication">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/StylesAndColors.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <bind:CommandReference x:Key="SetPowerLevelCommandRef" Command="{Binding SetPowerLevelCommand}"/>
            <bind:CommandReference x:Key="SetRfRegionCommandRef" Command="{Binding SetRfRegionCommand}"/>
            <bind:CommandReference x:Key="SetLRChannelCommandRef" Command="{Binding SetLRChannelCommand}"/>
            <bind:CommandReference x:Key="SetDcdcModeCommandRef" Command="{Binding SetDcdcModeCommand}"/>
            <bind:CommandReference x:Key="SetMaxLrTxPowerModeCommandRef" Command="{Binding SetMaxLrTxPowerModeCommand}"/>
            <bind:CommandReference x:Key="EnableRadioPTICommandRef" Command="{Binding EnableRadioPTICommand}"/>
            <ObjectDataProvider x:Key="RfRegionsEnum" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="enm:RfRegions"/>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
            <ObjectDataProvider x:Key="lrChEnm" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="enm:LongRangeChannels"/>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
            <ObjectDataProvider x:Key="DcdcModesEnum" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="enm:DcdcModes"/>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
            <ObjectDataProvider x:Key="MaxLrTxPowerModesEnum" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="enm:MaxLrTxPowerModes"/>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid Margin="4">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="205"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <TextBlock Grid.Row="0" Grid.Column="0" Text="Tx Power Level Normal (0.1 dBm):" />
        <controls:NumericUpDown Grid.Row="0" Grid.Column="1" Width="120"
                                Value="{Binding Path=NormalTxPower, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" MaxValue="200" MinValue="-100"
                                AutomationProperties.AutomationId="ID_TB_NORMAL_POWER_LEVEL">
            <controls:NumericUpDown.Style>
                <Style TargetType="controls:NumericUpDown" BasedOn="{StaticResource {x:Type controls:NumericUpDown}}">
                    <Setter Property="Foreground" Value="Black" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsNormalTxPower}" Value="False">
                            <Setter Property="Foreground" Value="Red"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </controls:NumericUpDown.Style>
        </controls:NumericUpDown>
        <StackPanel Grid.Row="0" Grid.Column="2" Grid.RowSpan="2" Orientation="Horizontal">
        <Button Margin="4" Content="Set" 
                Command="{StaticResource SetPowerLevelCommandRef}" 
                AutomationProperties.AutomationId="ID_BTN_SET_POWER_LEVEL"/>
        <TextBlock  Text="Tx Power Level value is greater than the max allowed" Foreground="Red">
            <TextBlock.Style>
                <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsNormalTxPower}" Value="True"/>
                                <Condition Binding="{Binding IsMeasured0dBmPower}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
        </StackPanel>

        <TextBlock Grid.Row="1" Grid.Column="0" Text="Tx Power Level Measured (0.1 dBm):"/>
        <controls:NumericUpDown Grid.Row="1" Grid.Column="1" Width="120"
                                Value="{Binding Path=Measured0dBmPower, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" MaxValue="200" MinValue="-100"
                                AutomationProperties.AutomationId="ID_TB_MEASURED_POWER_LEVEL">
            <controls:NumericUpDown.Style>
                <Style TargetType="controls:NumericUpDown" BasedOn="{StaticResource {x:Type controls:NumericUpDown}}">
                    <Setter Property="Foreground" Value="Black" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsMeasured0dBmPower}" Value="False">
                            <Setter Property="Foreground" Value="Red"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </controls:NumericUpDown.Style>
        </controls:NumericUpDown>
        
        <Separator Grid.Row="2" Grid.ColumnSpan="3" HorizontalAlignment="Stretch" Height="2"/>

        <TextBlock Grid.Row="3" Grid.Column="0" Text="Max LR Tx Power:" />
        <ComboBox Grid.Row="3" Grid.Column="1"  Name="cbMaxLrTxPowerModes" ItemsSource="{Binding Source={StaticResource MaxLrTxPowerModesEnum}}" SelectedItem="{Binding Path=MaxLrTxPowerMode}"/>
        <Button Grid.Row="3" Grid.Column="2"  Command="{StaticResource SetMaxLrTxPowerModeCommandRef}" Margin="4" Content="Set" AutomationProperties.AutomationId="ID_BTN_SET_MAX_LR_TX_POWER_CONFIG"/>

        <Separator Grid.Row="4" Grid.ColumnSpan="3" HorizontalAlignment="Stretch" Height="2"/>

        <TextBlock Grid.Row="5" Grid.Column="0" Text="RF Region:" />
        <ComboBox Grid.Row="5" Grid.Column="1" Name="cbRfRegions" ItemsSource="{Binding Source={StaticResource RfRegionsEnum}}" SelectedItem="{Binding Path=RfRegion}"/>
        <Button Grid.Row="5" Grid.Column="2" Command="{StaticResource SetRfRegionCommandRef}" Margin="4" Content="Set" AutomationProperties.AutomationId="ID_BTN_SET_RF_REGION_LEVEL"/>

        <TextBlock Grid.Row="6" Grid.Column="0" Text="LR Channel:" />
        <ComboBox Grid.Row="6" Grid.Column="1"  Name="cbLRChannels" ItemsSource="{Binding Source={StaticResource lrChEnm}}" SelectedItem="{Binding Path=LRChannel}"/>
        <Button Grid.Row="6" Grid.Column="2" Command="{StaticResource SetLRChannelCommandRef}" Margin="4" Content="Set" AutomationProperties.AutomationId="ID_BTN_SET_LR_CHANNEL"/>

        <Separator Grid.Row="7" Grid.ColumnSpan="3" HorizontalAlignment="Stretch" Height="2"/>

        <TextBlock Grid.Row="8" Grid.Column="0" Text="DCDC Config Mode:"/>
        <ComboBox Grid.Row="8" Grid.Column="1" Name="cbDcdcModes" ItemsSource="{Binding Source={StaticResource DcdcModesEnum}}" SelectedItem="{Binding Path=DcdcMode}"/>
        <Button Grid.Row="8" Grid.Column="2" Command="{StaticResource SetDcdcModeCommandRef}" Margin="4" Content="Set" AutomationProperties.AutomationId="ID_BTN_SET_DCDC_CONFIG"/>

        <Separator Grid.Row="9" Grid.ColumnSpan="3" HorizontalAlignment="Stretch" Height="2"/>

        <TextBlock Grid.Row="10" Grid.Column="0" Text="Radio PTI:"/>
        <CheckBox Grid.Row="10" Grid.Column="1" Name="cbIsRadioPTIEnabled" Content="Enabled" IsChecked="{Binding IsRadioPTIEnabled}" AutomationProperties.AutomationId="CHK_IS_RADIO_PTI" />
        <Button Grid.Row="10" Grid.Column="2" Content="Set" Command="{StaticResource EnableRadioPTICommandRef}" Margin="4" AutomationProperties.AutomationId="ID_BTN_SET_RADIO_PTI"/>

    </Grid>
</UserControl>
