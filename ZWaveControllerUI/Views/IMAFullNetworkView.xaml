<UserControl x:Class="ZWaveControllerUI.Views.IMAFullNetworkView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib" 
    xmlns:views="clr-namespace:ZWaveControllerUI.Views"
             xmlns:controls="clr-namespace:ZWaveControllerUI.Controls"
             xmlns:draw="clr-namespace:ZWaveControllerUI.Drawing"
             xmlns:bind="clr-namespace:ZWaveControllerUI.Bind"
             xmlns:viewModels="clr-namespace:ZWaveControllerUI.Models"
             xmlns:converters="clr-namespace:ZWaveControllerUI.Converters">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/StylesAndColors.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/DataTemplates/IMADataTemplates.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <converters:NodeToStringConverter x:Key="NodeToStringConverter"/>
            <converters:NodeTypeConverter x:Key="NodeTypeConverter" ZWaveDefinition="{Binding ApplicationModel.ZWaveDefinition}" Network="{Binding ApplicationModel.Controller.Network}"/>
            <converters:IsFailedNodeColorConverter x:Key="IsFailedNodeColorConverter"/>
            <converters:TreeViewItemIconByDepthConverter x:Key="TreeViewItemIconByDepthConverter"/>
            <converters:ConnectorColorConverter x:Key="ConnectorColorConverter"/>
            <converters:UInt32ToColorPropertyInfoConverter x:Key="UInt32ToColorPropertyInfoConverter"/>
            <Style x:Key="TreeViewItem" TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource {x:Type TreeViewItem}}">
                <Setter Property="IsExpanded" Value="{Binding Path=IsExpanded}" />
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="VerticalContentAlignment" Value="Top"/>
            </Style>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <bind:CommandReference x:Key="FullNetworkCommand" Command="{Binding FullNetworkCommand}"/>
            <bind:CommandReference x:Key="RequestNodeInfoCommand" Command="{Binding RequestNodeInfoCommand}"/>
            <bind:CommandReference x:Key="GetVersionCommand" Command="{Binding GetVersionCommand}"/>
            <bind:CommandReference x:Key="PingNodeCommand" Command="{Binding PingNodeCommand}"/>
            <bind:CommandReference x:Key="RediscoveryCommand" Command="{Binding RediscoveryCommand}"/>
            <bind:CommandReference x:Key="ReloadCommand" Command="{Binding ReloadCommand}"/>
            <bind:CommandReference x:Key="SetBackgroundImageCommand" Command="{Binding SetBackgroundImageCommand}"/>
            <bind:CommandReference x:Key="AddLinesCommand" Command="{Binding AddLinesCommand}"/>
            <bind:CommandReference x:Key="PowerLevelTestCommand" Command="{Binding PowerLevelTestCommand}"/>
            <bind:CommandReference x:Key="ResetLayoutCommand" Command="{Binding ResetLayoutCommand}"/>
            <bind:CommandReference x:Key="GetRoutingInfoCommand" Command="{Binding GetRoutingInfoCommand}"/>
            <converters:NetworkGridLayoutConverter x:Key="GridLayoutConverter"/>

            <ObjectDataProvider MethodName="GetType" ObjectType="{x:Type sys:Type}" x:Key="colorsTypeOdp">
                <ObjectDataProvider.MethodParameters>
                    <sys:String>System.Windows.Media.Colors, PresentationCore, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35</sys:String>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
            <ObjectDataProvider ObjectInstance="{StaticResource colorsTypeOdp}" MethodName="GetProperties" x:Key="colorPropertiesOdp">
            </ObjectDataProvider>
            <ControlTemplate x:Key="nodeTooltip">
                <StackPanel Orientation="Horizontal">
                    <TextBlock FontWeight="Bold" Text="{Binding Device, StringFormat='{}{0}'}" />
                    <TextBlock Foreground="{Binding Device.IsFailed, Converter={StaticResource IsFailedNodeColorConverter}}">
                        <TextBlock.Text>
                            <Binding Path="Device" Converter="{StaticResource NodeTypeConverter}"/>
                        </TextBlock.Text>
                    </TextBlock>
                </StackPanel>
            </ControlTemplate>
            <DataTemplate DataType="{x:Type viewModels:IMADeviceInfo}">
                <draw:DrawItem Id="{Binding Id}" TopLeft="{Binding TopLeft, Mode=TwoWay}" RenderTransformOrigin="0.5, 0.5" 
                               IsSelected="{Binding IsSelected, Mode=TwoWay}" 
                               IsSelectedAsSource="{Binding IsSelectedAsSource, Mode=TwoWay}"
                               HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <Rectangle Width="40" Height="40" IsHitTestVisible="False">
                        <Rectangle.Fill>
                            <VisualBrush>
                                <VisualBrush.Visual>
                                    <Grid>
                                        <Control Template="{StaticResource nodeGlobe}" x:Name="nodeEllipse" Background="{StaticResource ButtonBackground}"  Width="40" Height="40"/>
                                        <Control Template="{StaticResource redTrafficLight}" Width="8" Height="8" Visibility="{Binding IsError, Converter={StaticResource BooleanToVisibilityConverter}}" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0,3,3,0"/>
                                        <Control Template="{StaticResource yellowTrafficLight}" Width="8" Height="8" Visibility="{Binding IsWarning, Converter={StaticResource BooleanToVisibilityConverter}}" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0,3,3,0"/>
                                        <Control Template="{StaticResource greenTrafficLight}" Width="8" Height="8" Visibility="{Binding IsOk, Converter={StaticResource BooleanToVisibilityConverter}}" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0,3,3,0"/>
                                        <Control Template="{StaticResource noneTrafficLight}" FontSize="16" Visibility="{Binding IsNA, Converter={StaticResource BooleanToVisibilityConverter}}" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0,-3,-3,0"/>
                                        <TextBlock Text="{Binding Device, StringFormat='{}{0}'}" Foreground="{StaticResource ButtonForeground}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,3,3"/>
                                        <Rectangle x:Name="progressR1" Opacity="0" Width="4" Height="4" Fill="White" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="10,0,0,10"/>
                                        <Rectangle x:Name="progressR2" Opacity="0" Width="4" Height="4" Fill="White" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="16,0,0,10"/>
                                        <Rectangle x:Name="progressR3" Opacity="0" Width="4" Height="4" Fill="White" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="22,0,0,10"/>
                                    </Grid>
                                </VisualBrush.Visual>
                            </VisualBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                    <Control.ToolTip>
                        <Control Template="{StaticResource nodeTooltip}"/>
                    </Control.ToolTip>
                </draw:DrawItem>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding IsTestController}" Value="True">
                        <Setter TargetName="nodeEllipse" Property="Background" Value="Maroon"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsInProgress}" Value="True">
                        <DataTrigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="progressR1"
                                        Storyboard.TargetProperty="Opacity"
                                        From="0" To="1" Duration="0:0:1" BeginTime="0:0:0"
                                        RepeatBehavior="Forever"
                                        AutoReverse="True"/>
                                    <DoubleAnimation Storyboard.TargetName="progressR2"                                        Storyboard.TargetProperty="Opacity"
                                        From="0" To="1" Duration="0:0:1" BeginTime="0:0:0.33"
                                        RepeatBehavior="Forever"
                                        AutoReverse="True"/>
                                    <DoubleAnimation Storyboard.TargetName="progressR3"
                                        Storyboard.TargetProperty="Opacity"
                                        From="0" To="1" Duration="0:0:1" BeginTime="0:0:0.66"
                                        RepeatBehavior="Forever"
                                        AutoReverse="True"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </DataTrigger.EnterActions>
                        <DataTrigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard FillBehavior="Stop">
                                    <DoubleAnimation Storyboard.TargetName="progressR1"
                                        Storyboard.TargetProperty="Opacity"
                                        To="0" Duration="0:0:0.2" />
                                    <DoubleAnimation Storyboard.TargetName="progressR2"
                                        Storyboard.TargetProperty="Opacity"
                                        To="0" Duration="0:0:0.2" />
                                    <DoubleAnimation Storyboard.TargetName="progressR3"
                                        Storyboard.TargetProperty="Opacity"
                                        To="0" Duration="0:0:0.2" />
                                </Storyboard>
                            </BeginStoryboard>
                        </DataTrigger.ExitActions>
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="300"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <StackPanel Margin="2" >
            <WrapPanel Margin="2">
                <Button Command="{StaticResource FullNetworkCommand}">
                    <TextBlock Text="Network Health" TextWrapping="Wrap"/>
                </Button>
                <Button Command="{StaticResource RequestNodeInfoCommand}">
                    <TextBlock Text="Request Node Info" TextWrapping="Wrap"/>
                </Button>
                <Button Command="{StaticResource GetVersionCommand}">
                    <TextBlock Text="Get Version" TextWrapping="Wrap"/>
                </Button>
                <Button Command="{StaticResource PingNodeCommand}">
                    <TextBlock Text="Ping" TextWrapping="Wrap"/>
                </Button>
                <Button Command="{StaticResource GetRoutingInfoCommand}">
                    <TextBlock Text="Reload Routing Info" TextWrapping="Wrap"/>
                </Button>
                <Button Command="{StaticResource RediscoveryCommand}">
                    <TextBlock Text="Rediscovery" TextWrapping="Wrap"/>
                </Button>
            </WrapPanel>
            <StackPanel Orientation="Horizontal" Margin="2">
                <StackPanel Orientation="Horizontal">
                    <Path Data="M0,18H8v-2h-3V4h3l-4,-4,-4,4H3V16H0" Fill="Black" VerticalAlignment="Center"/>
                    <TextBlock Text="Src:"/>
                    <TextBox Width="33" Text="{Binding SourceNode, Converter={StaticResource NodeToStringConverter}}" />
                    <Separator Width="6" Margin="2"/>
                    <Path Data="m8,12h-3V0H3V12H0l4,4m0,0H0v2h8v-2" Fill="Black" VerticalAlignment="Center"/>
                    <TextBlock Text="Dest:"/>
                    <TextBox Width="33" Text="{Binding DestinationNode, Converter={StaticResource NodeToStringConverter}}"/>
                </StackPanel>
                <Button Command="{StaticResource PowerLevelTestCommand}">
                    <TextBlock Text="Power Level Test" TextWrapping="Wrap"/>
                </Button>
            </StackPanel>
        </StackPanel>
        <ScrollViewer x:Name="scrollViewer" Grid.Row="1" Grid.Column="0" VerticalAlignment="Stretch" ScrollViewer.HorizontalScrollBarVisibility="Auto">
            <ItemsControl ItemsSource="{Binding Items}" Width="1500" Height="1000" x:Name="grid">
                <ItemsControl.LayoutTransform>
                    <TransformGroup>
                        <ScaleTransform x:Name="scaleTransform"/>
                    </TransformGroup>
                </ItemsControl.LayoutTransform>
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <draw:DrawCanvas x:Name="drawCanvas" Style="{StaticResource canvasStyle}" Focusable="True">
                            <draw:DrawCanvas.SelectionService>
                                <draw:SelectionService 
                                    SelectedSourceId="{Binding SourceNode, Mode=TwoWay}" 
                                    SelectedDestinationId="{Binding DestinationNode, Mode=TwoWay}"/>
                            </draw:DrawCanvas.SelectionService>
                        </draw:DrawCanvas>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemContainerStyle>
                    <Style TargetType="ContentPresenter">
                        <Setter Property="Width" Value="Auto"/>
                        <Setter Property="Height" Value="Auto"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsItemSelected}" Value="True">
                                <Setter Property="Panel.ZIndex" Value="1"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ItemsControl.ItemContainerStyle>
            </ItemsControl>
        </ScrollViewer>
        <GridSplitter Width="4" Grid.Column="1" Grid.RowSpan="3" ResizeBehavior="PreviousAndNext" ResizeDirection="Columns"/>
        <Grid Grid.Column="2" Grid.RowSpan="3">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <StackPanel>
                <DockPanel>
                    <Ellipse Fill="{StaticResource GreenFill}" Width="8" Height="8" Margin="8">
                        <Ellipse.BitmapEffect>
                            <OuterGlowBitmapEffect GlowColor="Lime" GlowSize="4"/>
                        </Ellipse.BitmapEffect>
                    </Ellipse>
                    <TextBlock TextWrapping="Wrap">Network health is good.</TextBlock>
                </DockPanel>
                <DockPanel>
                    <Ellipse Fill="{StaticResource YellowFill}" Width="8" Height="8" Margin="8">
                        <Ellipse.BitmapEffect>
                            <OuterGlowBitmapEffect GlowColor="Orange" GlowSize="4"/>
                        </Ellipse.BitmapEffect>
                    </Ellipse>
                    <TextBlock TextWrapping="Wrap">Network health is acceptable but latency can be observed occasionally.</TextBlock>
                </DockPanel>
                <DockPanel>
                    <Ellipse Fill="{StaticResource RedFill}" Width="8" Height="8" Margin="8">
                        <Ellipse.BitmapEffect>
                            <OuterGlowBitmapEffect GlowColor="Red" GlowSize="4"/>
                        </Ellipse.BitmapEffect>
                    </Ellipse>
                    <TextBlock TextWrapping="Wrap">Network health is insufficient because frames are dropped.</TextBlock>
                </DockPanel>
                <DockPanel>
                    <Path Data="M11,4.5H13V15.5H11V4.5M13,17.5V19.5H11V17.5H13Z" Fill="Maroon" Width="24" Height="24">
                        <Path.BitmapEffect>
                            <OuterGlowBitmapEffect GlowColor="Red" GlowSize="4"/>
                        </Path.BitmapEffect>
                    </Path>
                    <TextBlock TextWrapping="Wrap">Network health is critical because Z-Wave node is not responding at all.</TextBlock>
                </DockPanel>
                <ToggleButton x:Name="detailsButton" Content="Details" HorizontalAlignment="Right"/>
                <Popup Width="600" Height="550" Grid.Row="0" Placement="Left" Margin="8" StaysOpen="False" IsOpen="{Binding IsChecked, ElementName=detailsButton, Mode=TwoWay}">
                    <Border Background="White" BorderThickness="1" BorderBrush="{StaticResource ButtonBackground}">
                        <FlowDocumentReader ViewingMode="Scroll">
                            <FlowDocument FontFamily="Arial" FontSize="11.5">
                                <Section>
                                    <Table>
                                        <Table.Columns>
                                            <TableColumn Width="40"/>
                                            <TableColumn />
                                        </Table.Columns>
                                        <Table.RowGroups>
                                            <TableRowGroup>
                                                <TableRow>
                                                    <TableCell>
                                                        <BlockUIContainer>
                                                            <Ellipse Fill="{StaticResource GreenFill}" Width="8" Height="8" Margin="8">
                                                                <Ellipse.BitmapEffect>
                                                                    <OuterGlowBitmapEffect GlowColor="Lime" GlowSize="4"/>
                                                                </Ellipse.BitmapEffect>
                                                            </Ellipse>
                                                        </BlockUIContainer>
                                                    </TableCell>
                                                    <TableCell>
                                                        <Paragraph>
                                                            <Run>Network health is good.</Run>
                                                            <LineBreak/>
                                                            <Run FontWeight="Bold">
                                                                ACTIONS:
                                                            </Run>
                                                            <LineBreak/>
                                                            <Run>
                                                                No actions are needed. The installation leverages on route resolution mechanisms to assure a robust and reliable Z-Wave network. This mechanism is handled solely by the Z-Wave protocol when using the TRANSMIT_OPTION_EXPLORE flag.
                                                            </Run>
                                                            <LineBreak/>
                                                        </Paragraph>
                                                    </TableCell>
                                                </TableRow>
                                            </TableRowGroup>
                                            <TableRowGroup>
                                                <TableRow>
                                                    <TableCell>
                                                        <BlockUIContainer>
                                                            <Ellipse Fill="{StaticResource YellowFill}" Width="8" Height="8" Margin="8">
                                                                <Ellipse.BitmapEffect>
                                                                    <OuterGlowBitmapEffect GlowColor="Orange" GlowSize="4"/>
                                                                </Ellipse.BitmapEffect>
                                                            </Ellipse>
                                                        </BlockUIContainer>
                                                    </TableCell>
                                                    <TableCell>
                                                        <Paragraph>
                                                            <Run>Network health is acceptable but latency can be observed occasionally.</Run>
                                                            <LineBreak/>
                                                            <Run FontWeight="Bold">
                                                                ACTIONS:
                                                            </Run>
                                                            <LineBreak/>
                                                            <Run TextDecorations="Underline">
                                                                Installation:
                                                            </Run>
                                                            <Run>
                                                                The installer MUST move nodes or install repeater nodes to achieve green traffic lights on all nodes. Verify changes by activating node in question several times to trigger a new route calculation and perform a new traffic light calculation to get network health updated.
                                                            </Run>
                                                            <LineBreak/>
                                                            <Run TextDecorations="Underline">
                                                                Maintenance:
                                                            </Run>
                                                            <Run>
                                                                No immediate actions are needed and the installation leverages on route resolution mechanisms to assure a robust and reliable Z-Wave network. Nodes with potential problems are flagged for rediscovery. Rediscovery of flagged nodes MUST be performed once a day to rebuild the routing information and resolve the potential problems. Assignment of return routes MUST be done after a rediscovery.
                                                            </Run>
                                                            <LineBreak/>
                                                        </Paragraph>
                                                    </TableCell>
                                                </TableRow>
                                            </TableRowGroup>
                                            <TableRowGroup>
                                                <TableRow>
                                                    <TableCell>
                                                        <BlockUIContainer>
                                                            <Ellipse Fill="{StaticResource RedFill}" Width="8" Height="8" Margin="8">
                                                                <Ellipse.BitmapEffect>
                                                                    <OuterGlowBitmapEffect GlowColor="Red" GlowSize="4"/>
                                                                </Ellipse.BitmapEffect>
                                                            </Ellipse>
                                                        </BlockUIContainer>
                                                    </TableCell>
                                                    <TableCell>
                                                        <Paragraph>
                                                            <Run>Network health is insufficient because frames are dropped.</Run>
                                                            <LineBreak/>
                                                            <Run FontWeight="Bold">
                                                                ACTIONS:
                                                            </Run>
                                                            <LineBreak/>
                                                            <Run TextDecorations="Underline">
                                                                Installation:
                                                            </Run>
                                                            <Run>
                                                                The installer MUST move nodes or install the necessary repeaters to achieve green traffic lights on all nodes. Verify changes by activating node in question to trigger a new route calculation and perform a new traffic light calculation to get network health updated.
                                                            </Run>
                                                            <LineBreak/>
                                                            <Run TextDecorations="Underline">
                                                                Maintenance:
                                                            </Run>
                                                            <Run>
                                                                No immediate actions are needed and the installation relies on route resolution mechanism to assure a robust and reliable Z-Wave network. Nodes with potential problems are flagged for needing rediscovery. Rediscovery of flagged nodes MUST be performed once a day to rebuild the routing information and resolve the potential problems. Assignment of return routes MUST be done after a rediscovery.
                                                            </Run>
                                                            <LineBreak/>
                                                            <Run FontWeight="Bold">
                                                                REMOTE ACTIONS:
                                                            </Run>
                                                            <Run>
                                                                Customer interaction can be conducted to understand what potential change has caused the problem to find a solution. An additional node rediscovery can be initiated. Assignment of return routes MUST follow rediscovery.
                                                            </Run>
                                                            <LineBreak/>
                                                            <Run FontWeight="Bold">
                                                                ON-SITE ACTIONS:
                                                            </Run>
                                                            <Run>
                                                                If the problem couldn’t be solved remotely, a technician may have to be dispatched. The Z-Wave node in question must either be moved closer to the gateway or a repeater node must be inserted between the Z-Wave node and the gateway.
                                                            </Run>
                                                            <LineBreak/>
                                                        </Paragraph>
                                                    </TableCell>
                                                </TableRow>
                                            </TableRowGroup>
                                            <TableRowGroup>
                                                <TableRow>
                                                    <TableCell>
                                                        <BlockUIContainer>
                                                            <Path Data="M11,4.5H13V15.5H11V4.5M13,17.5V19.5H11V17.5H13Z" Fill="Maroon" Width="24" Height="24">
                                                                <Path.BitmapEffect>
                                                                    <OuterGlowBitmapEffect GlowColor="Red" GlowSize="4"/>
                                                                </Path.BitmapEffect>
                                                            </Path>
                                                        </BlockUIContainer>
                                                    </TableCell>
                                                    <TableCell>
                                                        <Paragraph>
                                                            <Run>
                                                                Network health is critical because Z-Wave node is not responding at all.
                                                            </Run>
                                                            <LineBreak/>
                                                            <Run FontWeight="Bold">
                                                                ON-SITE ACTIONS:
                                                            </Run>
                                                            <LineBreak />
                                                            <Run>
                                                                1. Alert the user about the problem and instruct him to check that all Z-Wave nodes are powered.
                                                            </Run>
                                                            <LineBreak />
                                                            <Run>
                                                                2. In case the Z-Wave node is powered, instruct the user to check local operation of the node.
                                                            </Run>
                                                            <LineBreak />
                                                            <Run>
                                                                3. Perform a new network health check after the user has checked Z-Wave nodes.
                                                            </Run>
                                                            <LineBreak />
                                                            <Run>
                                                                4. In case network health is not green, perform a full rediscovery.
                                                            </Run>
                                                            <LineBreak />
                                                            <Run>
                                                                5. If network health is still critical notify call center about the problem, and initiate replacement of the node or installation of a repeater node.
                                                            </Run>
                                                            <LineBreak/>
                                                        </Paragraph>
                                                    </TableCell>
                                                </TableRow>
                                            </TableRowGroup>
                                        </Table.RowGroups>
                                    </Table>
                                </Section>
                            </FlowDocument>
                        </FlowDocumentReader>
                    </Border>
                </Popup>
            </StackPanel>
            <TreeView Grid.Row="1" ItemsSource="{Binding SelectedDevices}" IsEnabled="True">
                <TreeView.Resources>
                    <HierarchicalDataTemplate DataType="{x:Type viewModels:IMADeviceInfo}" ItemsSource="{Binding IMATestResults}">
                        <StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock FontWeight="Bold" Text="{Binding Device, StringFormat='{}{0}'}" />
                                <!--<TextBlock Foreground="{Binding Device.IsFailed, Converter={StaticResource IsFailedNodeColorConverter}}">
                                    <TextBlock.Text>
                                        <Binding Path="Device" Converter="{StaticResource NodeTypeConverter}"/>
                                    </TextBlock.Text>
                                </TextBlock>-->
                            </StackPanel>

                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="" Width="39"/>
                                <TextBlock Text="RC" Width="25"/>
                                <TextBlock Text="PER" Width="25"/>
                                <TextBlock Text="NB" Width="25"/>
                                <TextBlock Text="LWRdB" Width="40"/>
                                <TextBlock Text="LWRRSSI" Width="45"/>
                                <TextBlock Text="NHV" Width="25"/>
                            </StackPanel>

                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="" Width="39"/>
                                <TextBlock Text="{Binding RC, StringFormat='{}{0:00}'}" Width="25"/>
                                <TextBlock Text="{Binding PER, StringFormat='{}{0:00}'}" Width="25"/>
                                <TextBlock Text="{Binding NB, StringFormat='{}{0:00}'}" Width="25"/>
                                <TextBlock Width="40">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Text" Value="&lt;6dB"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding LWRdB}" Value="True">
                                                    <Setter Property="Text" Value="≥6dB"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <TextBlock Text="{Binding LWRRSSI, StringFormat='{}{0:00}'}" Width="45"/>
                                <TextBlock Text="{Binding NHV}" Width="25"/>
                            </StackPanel>
                        </StackPanel>
                    </HierarchicalDataTemplate>
                    <HierarchicalDataTemplate DataType="{x:Type viewModels:IMATestResult}">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding IterationNo, StringFormat='{}{0}:'}" Width="20"/>
                            <TextBlock Text="{Binding RC, StringFormat='{}{0:00}'}" Width="25"/>
                            <TextBlock Text="{Binding PER, StringFormat='{}{0:00}'}" Width="25"/>
                            <TextBlock Text="{Binding NB, StringFormat='{}{0:00}'}" Width="25"/>
                            <TextBlock Width="40">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Text" Value="&lt;6dB"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding LWRdB}" Value="True">
                                                <Setter Property="Text" Value="≥6dB"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                            <TextBlock Text="{Binding LWRRSSI, StringFormat='{}{0:00}'}" Width="45"/>
                            <TextBlock Text="{Binding NHV}" Width="25"/>
                        </StackPanel>
                    </HierarchicalDataTemplate>
                </TreeView.Resources>
            </TreeView>
            <ToggleButton Grid.Row="2" x:Name="legendButton" Content="Legend" HorizontalAlignment="Right"/>
            <Popup Width="600" Height="550" Grid.Row="1" Placement="Left" Margin="8" StaysOpen="False" IsOpen="{Binding IsChecked, ElementName=legendButton, Mode=TwoWay}">
                <Border Background="White" BorderThickness="1" BorderBrush="{StaticResource ButtonBackground}">
                    <FlowDocumentReader ViewingMode="Scroll">
                        <FlowDocument FontFamily="Arial" FontSize="11.5">
                            <Section>
                                <Table>
                                    <Table.Columns>
                                        <TableColumn Width="65"/>
                                        <TableColumn/>
                                    </Table.Columns>
                                    <Table.RowGroups>
                                        <TableRowGroup>
                                            <TableRow>
                                                <TableCell>
                                                    <Paragraph>
                                                        <Run>RC</Run>
                                                    </Paragraph>
                                                </TableCell>
                                                <TableCell>
                                                    <Paragraph>
                                                        <Run>Route Change</Run>
                                                        <LineBreak/>
                                                        <Run>Number of times the protocol needed additional routes</Run>
                                                        <LineBreak/>
                                                    </Paragraph>
                                                </TableCell>
                                            </TableRow>
                                        </TableRowGroup>
                                        <TableRowGroup>
                                            <TableRow>
                                                <TableCell>
                                                    <Paragraph>
                                                        <Run>PER</Run>
                                                    </Paragraph>
                                                </TableCell>
                                                <TableCell>
                                                    <Paragraph>
                                                        <Run>Packet Error Rate</Run>
                                                        <LineBreak/>
                                                        <Run>Number of failed transmitions</Run>
                                                        <LineBreak/>
                                                    </Paragraph>
                                                </TableCell>
                                            </TableRow>
                                        </TableRowGroup>
                                        <TableRowGroup>
                                            <TableRow>
                                                <TableCell>
                                                    <Paragraph>
                                                        <Run>NB</Run>
                                                    </Paragraph>
                                                </TableCell>
                                                <TableCell>
                                                    <Paragraph>
                                                        <Run>Neighbors count</Run>
                                                        <LineBreak/>
                                                        <Run>Number of repeater neighbors</Run>
                                                        <LineBreak/>
                                                    </Paragraph>
                                                </TableCell>
                                            </TableRow>
                                        </TableRowGroup>
                                        <TableRowGroup>
                                            <TableRow>
                                                <TableCell>
                                                    <Paragraph>
                                                        <Run>LWRdB</Run>
                                                    </Paragraph>
                                                </TableCell>
                                                <TableCell>
                                                    <Paragraph>
                                                        <Run>Last Working Route Powerlevel</Run>
                                                        <LineBreak/>
                                                        <Run>The maximum reduction in transmit power where the LWR still works</Run>
                                                        <LineBreak/>
                                                    </Paragraph>
                                                </TableCell>
                                            </TableRow>
                                        </TableRowGroup>
                                        <TableRowGroup>
                                            <TableRow>
                                                <TableCell>
                                                    <Paragraph>
                                                        <Run>LWR_RSSI</Run>
                                                    </Paragraph>
                                                </TableCell>
                                                <TableCell>
                                                    <Paragraph>
                                                        <Run>Estimation of the signal-to-noise ratio</Run>
                                                        <LineBreak/>
                                                        <Run>The difference between LWR RSSI and background RSSI</Run>
                                                        <LineBreak/>
                                                    </Paragraph>
                                                </TableCell>
                                            </TableRow>
                                        </TableRowGroup>
                                    </Table.RowGroups>
                                </Table>
                                <Paragraph>
                                    <LineBreak/>
                                    <Run>
                                        NHV: Network Health Value
                                    </Run>
                                </Paragraph>
                                <Table>
                                    <Table.Columns>
                                        <TableColumn Width="30"/>
                                        <TableColumn />
                                    </Table.Columns>
                                    <Table.RowGroups>
                                        <TableRowGroup>
                                            <TableRow>
                                                <TableCell>
                                                    <BlockUIContainer>
                                                        <Ellipse Fill="{StaticResource GreenFill}" Width="8" Height="8" Margin="8">
                                                            <Ellipse.BitmapEffect>
                                                                <OuterGlowBitmapEffect GlowColor="Lime" GlowSize="4"/>
                                                            </Ellipse.BitmapEffect>
                                                        </Ellipse>
                                                    </BlockUIContainer>
                                                </TableCell>
                                                <TableCell>
                                                    <Paragraph>
                                                        <Run Text="10: " FontWeight="Bold" FontFamily="Courier New"/>
                                                        <Run>
                                                            PER = 0 AND RC = 0 AND NB &gt; 2 AND LWRdB ≥ 6dB AND LWR_RSSI ≥ 17dB
                                                        </Run>
                                                        <LineBreak/>
                                                        <Run Text=" 9: " FontWeight="Bold" FontFamily="Courier New"/>
                                                        <Run>
                                                            PER = 0 AND RC = 1 AND NB &gt; 2 AND LWRdB ≥ 6dB AND LWR_RSSI ≥ 17dB
                                                        </Run>
                                                        <LineBreak/>
                                                        <Run Text=" 8: " FontWeight="Bold" FontFamily="Courier New"/>
                                                        <Run>
                                                            PER = 0 AND RC ≤ 1 AND NB ≤ 2 AND LWRdB ≥ 6dB AND LWR_RSSI ≥ 17dB
                                                        </Run>
                                                        <LineBreak/>
                                                        <Run Text=" 7: " FontWeight="Bold" FontFamily="Courier New"/>
                                                        <Run>
                                                            PER = 0 AND RC ≤ 1 AND NB &gt; 2 AND (LWRdB &lt; 6dB OR LWR_RSSI &lt; 17dB)
                                                        </Run>
                                                        <LineBreak/>
                                                        <Run Text=" 6: " FontWeight="Bold" FontFamily="Courier New"/>
                                                        <Run>
                                                            PER = 0 AND RC ≤ 1 AND NB &#x2264; 2 AND (LWRdB &lt; 6dB OR LWR_RSSI &lt; 17dB)
                                                        </Run>
                                                        <LineBreak/>
                                                    </Paragraph>
                                                </TableCell>
                                            </TableRow>
                                        </TableRowGroup>
                                        <TableRowGroup>
                                            <TableRow>
                                                <TableCell>
                                                    <BlockUIContainer>
                                                        <Ellipse Fill="{StaticResource YellowFill}" Width="8" Height="8" Margin="8">
                                                            <Ellipse.BitmapEffect>
                                                                <OuterGlowBitmapEffect GlowColor="Orange" GlowSize="4"/>
                                                            </Ellipse.BitmapEffect>
                                                        </Ellipse>
                                                    </BlockUIContainer>
                                                </TableCell>
                                                <TableCell>
                                                    <Paragraph>
                                                        <Run Text=" 5: " FontWeight="Bold" FontFamily="Courier New"/>
                                                        <Run>
                                                            PER = 0 AND 1 &lt; RC ≤ 4
                                                        </Run>
                                                        <LineBreak/>
                                                        <Run Text=" 4: " FontWeight="Bold" FontFamily="Courier New"/>
                                                        <Run>
                                                            PER = 0 AND RC &gt; 4
                                                        </Run>
                                                        <LineBreak/>
                                                    </Paragraph>
                                                </TableCell>
                                            </TableRow>
                                        </TableRowGroup>
                                        <TableRowGroup>
                                            <TableRow>
                                                <TableCell>
                                                    <BlockUIContainer>
                                                        <Ellipse Fill="{StaticResource RedFill}" Width="8" Height="8" Margin="8">
                                                            <Ellipse.BitmapEffect>
                                                                <OuterGlowBitmapEffect GlowColor="Red" GlowSize="4"/>
                                                            </Ellipse.BitmapEffect>
                                                        </Ellipse>
                                                    </BlockUIContainer>
                                                </TableCell>
                                                <TableCell>
                                                    <Paragraph>
                                                        <Run Text=" 3: " FontWeight="Bold" FontFamily="Courier New"/>
                                                        <Run>PER = 1</Run>
                                                        <LineBreak/>
                                                        <Run Text=" 2: " FontWeight="Bold" FontFamily="Courier New"/>
                                                        <Run>PER = 2</Run>
                                                        <LineBreak/>
                                                        <Run Text=" 1: " FontWeight="Bold" FontFamily="Courier New"/>
                                                        <Run>2 &lt; PER &lt; 10</Run>
                                                        <LineBreak/>
                                                    </Paragraph>
                                                </TableCell>
                                            </TableRow>
                                        </TableRowGroup>
                                        <TableRowGroup>
                                            <TableRow>
                                                <TableCell>
                                                    <BlockUIContainer>
                                                        <Path Data="M11,4.5H13V15.5H11V4.5M13,17.5V19.5H11V17.5H13Z" Fill="Maroon" Width="24" Height="24">
                                                            <Path.BitmapEffect>
                                                                <OuterGlowBitmapEffect GlowColor="Red" GlowSize="4"/>
                                                            </Path.BitmapEffect>
                                                        </Path>
                                                    </BlockUIContainer>
                                                </TableCell>
                                                <TableCell>
                                                    <Paragraph>
                                                        <Run Text=" 0: " FontWeight="Bold" FontFamily="Courier New"/>
                                                        <Run>PER = 10</Run>
                                                        <LineBreak/>
                                                    </Paragraph>
                                                </TableCell>
                                            </TableRow>
                                        </TableRowGroup>
                                    </Table.RowGroups>
                                </Table>
                            </Section>
                        </FlowDocument>
                    </FlowDocumentReader>
                </Border>
            </Popup>


        </Grid>

        <Popup Width="450" Height="450" Grid.Row="1" Placement="Center" Margin="8" StaysOpen="False" IsOpen="{Binding IsChecked, ElementName=legendMainButton, Mode=TwoWay}" >
            <Border Background="White" BorderThickness="1" BorderBrush="{StaticResource ButtonBackground}">
                <FlowDocumentReader ViewingMode="Scroll">
                    <FlowDocument FontFamily="Arial" FontSize="11.5">
                        <Table>
                            <Table.Columns>
                                <TableColumn Width="80" />
                                <TableColumn />
                            </Table.Columns>
                            <Table.RowGroups>
                                <TableRowGroup>
                                    <TableRow>
                                        <TableCell>
                                            <Section>
                                                <Paragraph >
                                                    <Image Stretch="None" Source="pack://application:,,,/Images/IMA_SimpleLine.png" />
                                                </Paragraph>
                                            </Section>
                                        </TableCell>

                                        <TableCell>
                                            <Section>
                                                <Paragraph>
                                                    <Run>
                                                        Last Working Route line. Connection between nodes.
                                                    </Run>
                                                </Paragraph>
                                            </Section>
                                        </TableCell>
                                    </TableRow>
                                    <TableRow>
                                        <TableCell>
                                            <Section>
                                                <Paragraph >
                                                    <Image Stretch="None" Source="pack://application:,,,/Images/IMA_RedLine.png" />
                                                </Paragraph>
                                            </Section>
                                        </TableCell>

                                        <TableCell>
                                            <Section>
                                                <Paragraph>
                                                    <Run>
                                                        Last Working Route of selected node.
                                                    </Run>
                                                </Paragraph>
                                            </Section>
                                        </TableCell>
                                    </TableRow>
                                    <TableRow>
                                        <TableCell>
                                            <Section>
                                                <Paragraph >
                                                    <Image Stretch="None" Source="pack://application:,,,/Images/IMA_NeighbourLine.png" />
                                                </Paragraph>
                                            </Section>
                                        </TableCell>

                                        <TableCell>
                                            <Section>
                                                <Paragraph>
                                                    <Run>
                                                        Connection line to the neighbours of selected node.
                                                    </Run>
                                                </Paragraph>
                                            </Section>
                                        </TableCell>
                                    </TableRow>
                                    <TableRow>
                                        <TableCell>
                                            <Section>
                                                <Paragraph >
                                                    <Image Stretch="None" Source="pack://application:,,,/Images/IMA_SimpleNode.png" />
                                                </Paragraph>
                                            </Section>
                                        </TableCell>

                                        <TableCell>
                                            <Section>
                                                <Paragraph>
                                                    <Run>
                                                        Node in the network.
                                                    </Run>
                                                </Paragraph>
                                            </Section>
                                        </TableCell>
                                    </TableRow>
                                    <TableRow>
                                        <TableCell>
                                            <Section>
                                                <Paragraph >
                                                    <Image Stretch="None" Source="pack://application:,,,/Images/IMA_ControllerNode.png" />
                                                </Paragraph>
                                            </Section>
                                        </TableCell>

                                        <TableCell>
                                            <Section>
                                                <Paragraph>
                                                    <Run>
                                                        Controller node which is connected to PC Controller.
                                                    </Run>
                                                </Paragraph>
                                            </Section>
                                        </TableCell>
                                    </TableRow>
                                    <TableRow>
                                        <TableCell>
                                            <Section>
                                                <Paragraph >
                                                    <Image Stretch="None" Source="pack://application:,,,/Images/IMA_SourceNode.png" />
                                                </Paragraph>
                                            </Section>
                                        </TableCell>

                                        <TableCell>
                                            <Section>
                                                <Paragraph>
                                                    <Run>
                                                        Source node for commands with source and destination arguments.
                                                    </Run>
                                                </Paragraph>
                                            </Section>
                                        </TableCell>
                                    </TableRow>
                                    <TableRow>
                                        <TableCell>
                                            <Section>
                                                <Paragraph >
                                                    <Image Stretch="None" Source="pack://application:,,,/Images/IMA_DestinationNode.png" />
                                                </Paragraph>
                                            </Section>
                                        </TableCell>

                                        <TableCell>
                                            <Section>
                                                <Paragraph>
                                                    <Run>
                                                        Destination node for commands with source and destination arguments.
                                                    </Run>
                                                </Paragraph>
                                            </Section>
                                        </TableCell>
                                    </TableRow>
                                </TableRowGroup>
                            </Table.RowGroups>
                        </Table>


                    </FlowDocument>
                </FlowDocumentReader>
            </Border>
        </Popup>
        <DockPanel Grid.Row="2" >
            <StackPanel  Orientation="Horizontal" Margin="2">
                <TextBlock> Zoom:</TextBlock>
                <Slider x:Name="slider" Minimum="0.5" Value="1" Maximum="2" Width="80" VerticalAlignment="Center" />
            </StackPanel>
            <StackPanel  Orientation="Horizontal" Margin="2">
                <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"/>
                <Button Content="Image" Command="{StaticResource SetBackgroundImageCommand}"/>
                <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"/>
                <CheckBox Content="" IsChecked="{Binding Path = UseBackgroundColor}" />
                <ComboBox Name="cbColors" Width="100" HorizontalAlignment="Right"
                    IsEnabled="{Binding Path = UseBackgroundColor}"
                    ItemsSource="{Binding Source={StaticResource colorPropertiesOdp}}"
                    SelectedItem="{Binding Path=BackgroundColor, Converter={StaticResource UInt32ToColorPropertyInfoConverter}, Mode=TwoWay}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Rectangle Width="14" Height="14" Margin="2" Fill="{Binding Name}"></Rectangle>
                                <TextBlock  Text="{Binding Name}" VerticalAlignment="Center"/>
                            </StackPanel>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </StackPanel>
            <StackPanel  Orientation="Horizontal" Margin="2" Visibility="Collapsed">
                <Button Content="Add Lines" Command="{StaticResource AddLinesCommand}"/>
                <Button Content="Reset" Command="{StaticResource ResetLayoutCommand}"/>
                <Button Content="Reload" Command="{StaticResource ReloadCommand}"/>
            </StackPanel>
            <ToggleButton Grid.Row="2" x:Name="legendMainButton" Content="Legend" HorizontalAlignment="Right"/>
        </DockPanel>
    </Grid>
</UserControl>
