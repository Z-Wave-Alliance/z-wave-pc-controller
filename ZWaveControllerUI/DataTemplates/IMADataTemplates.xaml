<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib" 
    xmlns:views="clr-namespace:ZWaveControllerUI.Views"
             xmlns:controls="clr-namespace:ZWaveControllerUI.Controls"
             xmlns:draw="clr-namespace:ZWaveControllerUI.Drawing"
             xmlns:bind="clr-namespace:ZWaveControllerUI.Bind"
             xmlns:viewModels="clr-namespace:ZWaveControllerUI.Models"
             xmlns:converters="clr-namespace:ZWaveControllerUI.Converters">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Styles/Colors.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <converters:NodeTypeConverter x:Key="NodeTypeConverter" ZWaveDefinition="{Binding ApplicationModel.ZWaveDefinition}" Network="{Binding ApplicationModel.Controller.Network}"/>
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <converters:IsFailedNodeColorConverter x:Key="IsFailedNodeColorConverter"/>
    <converters:PointConverter x:Key="PointConverter"/>
    <converters:SizeConverter x:Key="SizeConverter"/>
    <!-- ResizeDecorator Default Template -->
    <ControlTemplate x:Key="ResizeDecoratorTemplate" TargetType="{x:Type Control}">
        <Grid SnapsToDevicePixels="false">
            <draw:ResizeThumb Height="1" Cursor="SizeNS" Margin="0 -2 0 0" 
                                      VerticalAlignment="Top" HorizontalAlignment="Stretch"/>
            <draw:ResizeThumb Width="1" Cursor="SizeWE" Margin="-2 0 0 0"
                                      VerticalAlignment="Stretch" HorizontalAlignment="Left"/>
            <draw:ResizeThumb Width="1" Cursor="SizeWE" Margin="0 0 -2 0"
                                      VerticalAlignment="Stretch" HorizontalAlignment="Right"/>
            <draw:ResizeThumb Height="1" Cursor="SizeNS" Margin="0 0 0 -2"
                                      VerticalAlignment="Bottom" HorizontalAlignment="Stretch"/>
            <draw:ResizeThumb Width="3" Height="3" Cursor="SizeNWSE" Margin="-3 -3 0 0"
                                      VerticalAlignment="Top" HorizontalAlignment="Left"/>
            <draw:ResizeThumb Width="3" Height="3" Cursor="SizeNESW" Margin="0 -3 -3 0"
                                      VerticalAlignment="Top" HorizontalAlignment="Right"/>
            <draw:ResizeThumb Width="3" Height="3" Cursor="SizeNESW" Margin="-3 0 0 -3"
                                      VerticalAlignment="Bottom" HorizontalAlignment="Left"/>
            <draw:ResizeThumb Width="3" Height="3" Cursor="SizeNWSE" Margin="0 0 -3 -3"
                                      VerticalAlignment="Bottom" HorizontalAlignment="Right"/>
        </Grid>
    </ControlTemplate>

    <!-- IsSourceDecorator Default Template -->
    <ControlTemplate x:Key="IsSourceDecoratorTemplate" TargetType="{x:Type Control}">
        <Path Data="M0,18H8v-2h-3V4h3l-4,-4,-4,4H3V16H0" Fill="Black" Margin="-8"/>
    </ControlTemplate>

    <!-- IsDestinationDecorator Default Template -->
    <ControlTemplate x:Key="IsDestinationDecoratorTemplate" TargetType="{x:Type Control}">
        <Path Data="m8,12h-3V0H3V12H0l4,4m0,0H0v2h8v-2" Fill="Black" Margin="-8"/>
    </ControlTemplate>

    <!-- TrafficLights Default Templates -->
    <ControlTemplate x:Key="greenTrafficLight">
        <Ellipse Fill="{StaticResource GreenFill}">
            <Ellipse.BitmapEffect>
                <OuterGlowBitmapEffect GlowColor="Lime" GlowSize="4"/>
            </Ellipse.BitmapEffect>
        </Ellipse>
    </ControlTemplate>
    <ControlTemplate x:Key="redTrafficLight">
        <Ellipse Fill="{StaticResource RedFill}">
            <Ellipse.BitmapEffect>
                <OuterGlowBitmapEffect GlowColor="Red" GlowSize="4"/>
            </Ellipse.BitmapEffect>
        </Ellipse>
    </ControlTemplate>
    <ControlTemplate x:Key="yellowTrafficLight">
        <Ellipse Fill="{StaticResource YellowFill}">
            <Ellipse.BitmapEffect>
                <OuterGlowBitmapEffect GlowColor="Yellow" GlowSize="4"/>
            </Ellipse.BitmapEffect>
        </Ellipse>
    </ControlTemplate>
    <ControlTemplate x:Key="noneTrafficLight">
        <Path Data="M11,4.5H13V15.5H11V4.5M13,17.5V19.5H11V17.5H13Z" Fill="Maroon" Width="24" Height="24">
            <Path.BitmapEffect>
                <OuterGlowBitmapEffect GlowColor="Red" GlowSize="4"/>
            </Path.BitmapEffect>
        </Path>
    </ControlTemplate>

    <!-- Node Globe Default Template -->
    <ControlTemplate x:Key="nodeGlobe" >
        <Grid>
            <Ellipse Fill="Black" Opacity="0.3" Margin="3,3,0,0"/>
            <Ellipse x:Name="nodeEllipse" Fill="{TemplateBinding Background}" Margin="0,0,3,3"/>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="nodeTooltip">

    </ControlTemplate>

    <!-- ResizeThumb Default Template -->
    <Style TargetType="{x:Type draw:ResizeThumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type draw:ResizeThumb}">
                    <Rectangle Fill="{StaticResource BarBackground}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- DragThumb Default Template -->
    <Style TargetType="{x:Type draw:DragThumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type draw:DragThumb}">
                    <Rectangle Fill="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- DrawItem Style -->
    <Style TargetType="{x:Type draw:DrawItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type draw:DrawItem}">
                    <Grid DataContext="{Binding Path='.', RelativeSource={RelativeSource TemplatedParent}}">
                        <!-- PART_DragThumb -->
                        <Rectangle x:Name="PART_SelectedRect" Fill="Transparent" Stroke="{StaticResource BarBackground}" StrokeDashArray="4,2" Visibility="Hidden"/>
                        <draw:DragThumb x:Name="PART_DragThumb" Cursor="SizeAll"/>
                        <!-- PART_ResizeDecorator -->
                        <!--<Control x:Name="PART_ResizeDecorator" 
                                 Visibility="Collapsed"
                                 Template="{StaticResource ResizeDecoratorTemplate}"/>-->
                        <!-- PART_ContentPresenter -->
                        <ContentPresenter x:Name="PART_ContentPresenter"
                                          HorizontalAlignment="Stretch"
                                          VerticalAlignment="Stretch"
                                          Content="{TemplateBinding ContentControl.Content}"
                                          Margin="{TemplateBinding ContentControl.Padding}"/>
                        <!-- PART_IsSourceDecorator -->
                        <Control x:Name="PART_IsSourceDecorator" 
                                 Visibility="Collapsed"
                                 Template="{StaticResource IsSourceDecoratorTemplate}"/>
                        <!-- PART_IsDestinationDecorator -->
                        <Control x:Name="PART_IsDestinationDecorator" 
                                 Visibility="Collapsed"
                                 Template="{StaticResource IsDestinationDecoratorTemplate}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Value="True" Binding="{Binding RelativeSource={RelativeSource Self},Path=IsSelected}"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_SelectedRect" Property="Visibility" Value="Visible"/>
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding IsSelectedAsSource, RelativeSource={RelativeSource Self}}" Value="true">
                            <Setter TargetName="PART_IsSourceDecorator" Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsSelectedAsDestination, RelativeSource={RelativeSource Self}}" Value="true">
                            <Setter TargetName="PART_IsDestinationDecorator" Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ImageBrush x:Key="backgroundImage" ImageSource="{Binding BackgroundImagePath, TargetNullValue='pack://application:,,,/Images/Office1.png'}" Stretch="Uniform" />
    <SolidColorBrush x:Key="backgroundColor" Color="{Binding SelectedItem.Name, ElementName='cbColors'}"/>

    <!-- DrawCanvas Default Template -->
    <Style x:Key="canvasStyle" TargetType="{x:Type draw:DrawCanvas}">
        <Setter Property="IsHitTestVisible" Value="True"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="draw:DrawCanvas.Background" Value="{StaticResource backgroundImage}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding UseBackgroundColor}" Value="true">
                <Setter Property="draw:DrawCanvas.Background" Value="{StaticResource backgroundColor}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>


    <DataTemplate DataType="{x:Type viewModels:IMARoutingLine}">
        <Path IsHitTestVisible="False" Stroke="{StaticResource ButtonBackground}" Panel.ZIndex="-1" StrokeThickness="0.75" StrokeDashArray="8,4" >
            <Path.Data>
                <PathGeometry>
                    <PathFigure StartPoint="{Binding StartPoint, Converter={StaticResource PointConverter}}">
                        <ArcSegment SweepDirection="Clockwise" Size="{Binding Size, Converter={StaticResource SizeConverter}}" IsLargeArc="False" Point="{Binding Point, Converter={StaticResource PointConverter}}"/>
                    </PathFigure>
                </PathGeometry>
            </Path.Data>
        </Path>
    </DataTemplate>

    <DataTemplate DataType="{x:Type viewModels:IMALine}">
        <Line IsHitTestVisible="False" x:Name="imaLine" Opacity="1" StrokeThickness="0.75" 
                      Stroke="{StaticResource ButtonBackground}" Panel.ZIndex="-1" 
                      X1="{Binding X1}" Y1="{Binding Y1}" 
                      X2="{Binding X2}" Y2="{Binding Y2}">
        </Line>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsItemSelected}" Value="True">
                <Setter TargetName="imaLine" Property="StrokeThickness" Value="2" />
                <Setter TargetName="imaLine" Property="Stroke" Value="Maroon" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
</ResourceDictionary>